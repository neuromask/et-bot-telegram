const { Telegraf, session, Scenes: {WizardScene, Stage}, Context, Markup } = require("telegraf");
const {image_search, image_search_generator} = require("duckduckgo-images-api");
require('dotenv').config();
const bot = new Telegraf(process.env.TELEGRAM_TOKEN);
const axios = require('axios').default;
const { v4: uuidv4 } = require('uuid');

// MySQL
const mysql = require('mysql');
const connection = mysql.createPool({
  host      : process.env.DB_HOST,
  user      : process.env.DB_USER,
  password  : process.env.DB_PASS,
  database  : process.env.DB_NAME
});

// Scenes -----------------------------------

let langCode, userName;

// Language based answers
const localizedStrings = {
  chatTypeText:{
    'en': '[Warning] This command only for private chat. Lets talk in private - @ElectroTallinnBot :)',
    'et-ee': '[Hoiatus] See k√§sk on m√µeldud ainult privaatseks vestluseks. R√§√§gime privaatselt - @ElectroTallinnBot :)',
    'ru': '[–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ] –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —á–∞—Ç–∞. –ü–æ–≥–æ–≤–æ—Ä–∏–º –Ω–∞–µ–¥–∏–Ω–µ - @ElectroTallinnBot :)'
  },
  titleText:{
    'en':'‚ö†Ô∏è Before adding a point, please make sure that the outlet is working and same point has not been previously added to the map!\n\n1Ô∏è‚É£ *Name*\nPlease name the place, write address, company or street name near the object.',
    'et-ee':'‚ö†Ô∏è Enne punkti lisamist veenduge, et pistikupesa t√∂√∂tab ja et sellist punkti pole kaardile varem lisatud.!\n\n1Ô∏è‚É£ *Nimi*\nPalun nimatage koht, kirjutage objekti l√§hedale aadress, ettev√µtte v√µi t√§nava nimi.',
    'ru':'‚ö†Ô∏è –ü–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ç–æ—á–∫–∏ —É–±–µ–¥–∏—Ç–µ—Å—å –≤ —Ç–æ–∏, —á—Ç–æ —Ä–æ–∑–µ—Ç–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Ç–∞–∫–∞—è —Ç–æ—á–∫–∞ —É–∂–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–∞–Ω–µ–µ –Ω–∞ –∫–∞—Ä—Ç—É!\n\n1Ô∏è‚É£ *–ù–∞–∑–≤–∞–Ω–∏–µ*\n–ù–∞–∑–æ–≤–∏—Ç–µ –º–µ—Å—Ç–æ: –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫–æ–º–ø–∞–Ω–∏—é –∏–ª–∏ —É–ª–∏—Ü—É —Ä—è–¥–æ–º —Å –æ–±—ä–µ–∫—Ç–æ–º.'
  },
  descriptionText:{
      'en':'2Ô∏è‚É£ *Desription*\nPlease describe place. Is it outside or inside? How to find it in place.',
      'et-ee':'2Ô∏è‚É£ *Kirjeldus*\nPalun kirjeldage kohta. Kas see on v√§ljas v√µi sees? Kuidas seda kohal leida.',
      'ru':'2Ô∏è‚É£ *–û–ø–∏—Å–∞–Ω–∏–µ*\n–û–ø–∏—à–∏—Ç–µ –º–µ—Å—Ç–æ. –≠—Ç–æ —Å–Ω–∞—Ä—É–∂–∏ –∏–ª–∏ –≤–Ω—É—Ç—Ä–∏? –ö–∞–∫ –Ω–∞–π—Ç–∏ –Ω–∞ –º–µ—Å—Ç–µ.'
  },
  typeText:{
      'en':'3Ô∏è‚É£ *Type*\nPlease select type of place.',
      'et-ee':'3Ô∏è‚É£ *T√º√ºp*\nPalun valige koha t√º√ºp.',
      'ru':'3Ô∏è‚É£ *–¢–∏–ø*\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ—Å—Ç–∞.'
  },
  typeTextOption:{
    'en': [['Charging', 'Repair','Water', 'Air'],['Exit']],
    'et-ee': [['Laadimine', 'Remont','Vesi', '√ïhk'],['Exit']],
    'ru': [['–ó–∞—Ä—è–¥–∫–∞', '–†–µ–º–æ–Ω—Ç','–í–æ–¥–∞', '–í–æ–∑–¥—É—Ö'],['Exit']]
  },
  coordsText:{
    'en': '4Ô∏è‚É£ *Location*\nPlease select your current location or use marker for custom location.',
    'et-ee': '4Ô∏è‚É£ *Asukoht*\nPalun valige oma praegune asukoht v√µi kasutage kohandatud asukoha jaoks markerit.',
    'ru': '4Ô∏è‚É£ *–ú–µ—Å—Ç–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è*\n–î–ª—è —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø—É –ª–∏–±–æ –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Ç–æ—á–∫—É(–ª–æ–∫–∞—Ü–∏—é) –Ω–∞ –∫–∞—Ä—Ç–µ —á–µ—Ä–µ–∑ "—Å–∫—Ä–µ–ø–∫—É"'
  },
  coordsBtnText:{
    'en': 'My current location.',
    'et-ee': 'Minu praegune asukoht.',
    'ru': '–ú–æ–µ —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.'
  },
  photoText:{
    'en': '5Ô∏è‚É£ *Photo*\nPlease take a picture of the objec in landscape mode.',
    'et-ee': '5Ô∏è‚É£ *Foto*\nPalun pildistage objekt maastikure≈æiimis.',
    'ru': '5Ô∏è‚É£ *–§–æ—Ç–æ*\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –æ–±—ä–µ–∫—Ç–∞ –≤ –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.'
  },
  finalText:{
    'en': 'üëç <b>Thank you</b> üëç Location will be approved in 24h and added to the <a href="https://electrotallinn.ee/map/">map</a>.',
    'et-ee': 'üëç <b>T√§name</b> üëç Asukoht kinnitatakse 24 tunni jooksul ja lisatakse <a href="https://electrotallinn.ee/map/">kaardile</a>.',
    'ru': 'üëç <b>–°–ø–∞—Å–∏–±–æ</b> üëç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ <a href="https://electrotallinn.ee/map/">–∫–∞—Ä—Ç—É</a>.'
  }
}

// Markup elements
const exit_keyboard = Markup.keyboard(['Exit']).resize().oneTime();

const remove_keyboard = Markup.removeKeyboard();
const coords = Markup.keyboard([[{text: 'My current location.', request_location: true}],['Exit']]).resize().oneTime();
/*const coords = {
  reply_markup: JSON.stringify({
    keyboard: [
      [{text: 'Location', request_location: true}],
      [{text: 'Exit'}],
    ],
    resize_keyboard: true,
    one_time_keyboard: true,
  }),
};*/

//const type = Markup.keyboard([[{text:'Charging',callback_data: 'CHARGE'}, 'Repair', 'Water', 'Air'],['Exit']]).resize().oneTime();
const type = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{text:"‚ö° [Charging]", callback_data: "CHARGE"}],
      [{text:"üõ†Ô∏è [Repair]", callback_data: "REPAIR"}],
      [{text:"üí¶ [Water]", callback_data: "WATER"}],
      [{text:"üí® [Air]", callback_data: "AIR"}]
  ],
    resize_keyboard: true,
    one_time_keyboard: true,
  }),
};

// Steps
const titleHandler = Telegraf.on('text', async ctx => {
  console.log("T1: "+ctx.message.text+" by USER: "+userName);
  ctx.scene.state.title = ctx.message.text;
  await ctx.replyWithMarkdown(localizedStrings['descriptionText'][langCode], exit_keyboard);
  return ctx.wizard.next();

});

const descriptionHandler = Telegraf.on('text', async ctx => {
  console.log("T2: "+ctx.message.text+" by USER: "+userName);
  ctx.scene.state.description = ctx.message.text;
  await ctx.replyWithMarkdown(localizedStrings['typeText'][langCode], type);
  return ctx.wizard.next();

});

const typeHandler = Telegraf.on("callback_query", async data =>  {
  console.log("TYPE: "+data.update.callback_query.data+" by USER: "+userName);
  data.scene.state.type = data.update.callback_query.data;
  await data.replyWithMarkdown (localizedStrings['coordsText'][langCode], coords);
  return data.wizard.next();

});

const coordsHandler = Telegraf.on('location', async ctx => {
  console.log("POS: "+ctx.message.location.latitude+','+ctx.message.location.longitude+" by USER: "+userName);
  ctx.scene.state.lat = ctx.message.location.latitude;
  ctx.scene.state.lng = ctx.message.location.longitude;
  await ctx.replyWithMarkdown(localizedStrings['photoText'][langCode], exit_keyboard);
  return ctx.wizard.next();

});

const imageHandler = Telegraf.on('photo', async ctx => {

  // Get Image
  const getUrl = await ctx.telegram.getFileLink( ctx.message.photo[2].file_id );
  const imgUrl = getUrl.href;
  console.log("IMG URL: "+imgUrl+" by USER: "+userName);

  const response = await axios.get(imgUrl,  { responseType: 'arraybuffer' })
  const buffer = Buffer.from(response.data, 'binary');

  //console.log(file);
  //ctx.replyWithPhoto( {source: Buffer.from(buffer, 'base64')} )
  
  // MySQL 
  connection.getConnection(function(err, c) {
		if (err) {
			console.log(err);
			c.release();
			return;
		}
    const fields = {
      title: ctx.scene.state.title,
      description: ctx.scene.state.description,
      lat: ctx.scene.state.lat,
      lng: ctx.scene.state.lng,
      //image: fs.readFileSync("./images/1a.jpg"),
      image: buffer,
      image_name: uuidv4()+'.jpg',
      type: ctx.scene.state.type,
      user_first_name: ctx.message.chat.first_name,
      user_uin: ctx.message.from.id,
      status: 'NEW'
    };
		c.query('INSERT INTO locations SET ?', fields, function(error,result) {
      console.log(result);
      //console.log(error);
			c.release();
    });
  });

  await ctx.replyWithHTML(localizedStrings['finalText'][langCode], remove_keyboard);
  await bot.telegram.sendMessage(371176498, `*DONE:*\n${userName} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–æ—á–∫—É, ${ctx.scene.state.title}, ${ctx.scene.state.description}. –Ø–∑—ã–∫ [ ${langCode} ]`, {parse_mode: "Markdown"});
  console.log(">>> DONE by USER: "+userName);

  return ctx.scene.leave();

});

const infoScene = new WizardScene('infoScene', titleHandler, descriptionHandler, typeHandler, coordsHandler, imageHandler);
infoScene.enter(ctx => ctx.replyWithMarkdown(localizedStrings['titleText'][langCode], exit_keyboard ));

const stage = new Stage([ infoScene ]);
stage.hears('Exit', ctx => ctx.scene.leave());
//bot.action('exit', ctx => ctx.scene.leave());

bot.use(session(), stage.middleware());

// General
bot.start((ctx) => ctx.reply("Welcome"));
//bot.on("sticker", (ctx) => ctx.reply("üëç"));

// New member
bot.on("new_chat_members", (ctx) => {
  bot.telegram.sendMessage(ctx.chat.id, `*Welcome / –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${ctx.message.new_chat_member.first_name}!*`, {disable_web_page_preview: true, parse_mode: "Markdown",disable_notification: true});
  bot.telegram.sendMessage(ctx.chat.id, `‚ö†Ô∏è <a href="https://t.me/electrotallinn_alerts/7">–û–∑–Ω–∞–∫–æ–º—å—Å—è</a> —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º –≥—Ä—É–ø–ø—ã –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ! ‚ö†Ô∏è \n‚ö†Ô∏è <a href="https://t.me/electrotallinn_alerts/7">Please read</a> group information in Telegram! ‚ö†Ô∏è`, {disable_web_page_preview: true, parse_mode: "HTML",disable_notification: true});
  bot.telegram.sendMessage(ctx.chat.id, "Commands for Bot:\n\n */help* - _List of commands_\n */social* - _ElectroTallinn social media links_\n */ali* - _Aliexpress links_\n */map* - _Charging sockets map_\n */pic* <name> - _Search for image_\n ", {disable_web_page_preview: true,parse_mode: "Markdown",disable_notification: true}).then(({message_id}) => {setTimeout(() => {ctx.deleteMessage(message_id)}, 60000)});
  ctx.replyWithSticker('CAACAgQAAxkBAAEKmPJgtu1nXdo4zdB0lKLHAAFzcsmOyl8AAj8KAAJrfPFTmXeoVb1qy_cfBA');
});

// commands
bot.command("/add", async ctx => {
  userName = ctx.update.message.chat.first_name;
  console.log(">>> STARTED by USER: "+userName);
  if (ctx.message.chat.type != 'private') {
    bot.telegram.sendMessage(ctx.chat.id,localizedStrings['chatTypeText'][langCode]);
  } else {
    ctx.scene.leave();
    ctx.scene.enter('infoScene');
    setLang(ctx);
  }
  bot.telegram.sendMessage(371176498, `*STARTED:*\n–ù–∞—á–∞–ª, [ ${userName} ], —è–∑—ã–∫ [ ${langCode} ]`, {parse_mode: "Markdown"});
});

function setLang(ctx) {
  const userLang = ctx.update.message.from.language_code;
  if (userLang == "ru" || userLang == "et-ee") {
    langCode = ctx.message.from.language_code;
  } else {
    langCode = "en";
  }
  console.log("LANG: "+langCode+" by USER: "+userName);
}

bot.command("/help", ctx => {
  bot.telegram.sendMessage(ctx.chat.id, "Commands for Bot:\n\n */help* - _List of commands_\n */social* - _ElectroTallinn social media links_\n */ali* - _Aliexpress links_\n */map* - _Charging sockets map_\n */pic* <name> - _Search for image_\n", {disable_web_page_preview: true,parse_mode: "Markdown",disable_notification: true});
});

bot.command(["event", "events", "info"], (ctx) => ctx.reply("@electrotallinn_alerts \n**ElectroTallinn Alerts Channel** \nEvents, News, Important Info"));
bot.command("facebook", (ctx) => ctx.reply("https://www.facebook.com/groups/electrotallinn \nEvents, Videos, Photos, Chat, News"));
bot.command("instagram", (ctx) => ctx.reply("https://www.facebook.com/groups/electrotallinn \nEvents, Videos, Photos, Chat, News"));

bot.command("/pic", (ctx) => {
  const request = ctx.message.text;
  let search;
  if (request.split(" ").length > 1) {
    search = request.substr(request.indexOf(" ") + 1);
  } else {
    search = "random image";
  }
  //console.log("SEARCH:"+search);
  
  function print(results) {
    //console.log("RESULTS:"+results);
    if (results != '') {
      let rndImg = results[Math.floor(Math.random() * results.length)];
      //console.log(rndImg.image);

      // pipe url content
      ctx.replyWithPhoto({ url: rndImg.image }, { caption: search });
    } else {
      bot.telegram.sendMessage(ctx.chat.id, "Not found..");
    }
  }
  
  image_search({ query:search, moderate:true, iterations: 1, retries: 1 }).then(results=>print(results));

});

bot.command("/ali", ctx => {
  bot.telegram.sendMessage(ctx.chat.id, "*Aliexpress links:* _https://bit.ly/2DVyl1d_", {disable_web_page_preview: true, parse_mode: "Markdown", disable_notification: true});
});


bot.command("/map", ctx => {
  //console.log(ctx.from)
  let botMessage = "ET‚ö°Ô∏è *ElectroTallinn* map:";
  //ctx.deleteMessage();
  bot.telegram.sendMessage(ctx.chat.id, botMessage, {
      disable_notification: true,
      parse_mode: "Markdown",
      reply_markup: {
          inline_keyboard: [
              [
                { text: "üìç Map", url: 'https://electrotallinn.ee/map' },
                { text: "üèÜ Top Ranks", url: 'https://electrotallinn.ee/map/#/top' },
                { text: "‚ÑπÔ∏è Help", url: 'https://electrotallinn.ee/map/#/help' },
              ],
          ]
      }
  })
});

bot.command("/say", ctx => {
  const tell = ctx.message.text;
  const say = tell.substr(tell.indexOf(" ") + 1);
  ctx.deleteMessage();
  bot.telegram.sendMessage(ctx.chat.id, `${say}`, {disable_web_page_preview: true,parse_mode: "Markdown"});
});

bot.command("/social", ctx => {
  //console.log(ctx.from)
  let botMessage = "ET‚ö°Ô∏è *ElectroTallinn* in social media:";
  //ctx.deleteMessage();
  bot.telegram.sendMessage(ctx.chat.id, botMessage, {
      disable_notification: true,
      parse_mode: "Markdown",
      reply_markup: {
          inline_keyboard: [
              [
                { text: "‚ö°Ô∏è Facebook", callback_data: "facebook", url: 'https://www.facebook.com/groups/electrotallinn' },
                { text: "‚ö°Ô∏èInstagram", callback_data: "instagram", url: 'https://www.instagram.com/electrotallinn' },
                { text: "‚ö°Ô∏è VK", callback_data: "vk", url: 'https://vk.com/electrotallinn' },
              ],
              [
                { text: "‚ö°Ô∏è Youtube", callback_data: "youtube", url: 'https://www.youtube.com/electrotallinn' },
                { text: "‚ö°Ô∏è Flickr", callback_data: "flickr", url: 'https://www.flickr.com/electrotallinn' },
                { text: "‚ö°Ô∏è Reddit", callback_data: "reddit", url: 'https://www.reddit.com/r/electrotallinn' },
              ],
          ]
      }
  })
});

bot.action("social", ctx => {
  bot.telegram.sendMessage(ctx.chat.id, "*FACEBOOK:* _https://www.facebook.com/groups/electrotallinn_", {disable_web_page_preview: true,parse_mode: "Markdown",disable_notification: true}).then(({message_id}) => {setTimeout(() => {ctx.deleteMessage(message_id)}, 15000)});
});

bot.action("facebook", ctx => {
  bot.telegram.sendMessage(ctx.chat.id, "*FACEBOOK:* _https://www.facebook.com/groups/electrotallinn_", {disable_web_page_preview: true,parse_mode: "Markdown",disable_notification: true}).then(({message_id}) => {setTimeout(() => {ctx.deleteMessage(message_id)}, 15000)});
});


bot.command("/t", ctx => {

  const opts = {
    reply_markup: JSON.stringify({
      keyboard: [
        [{text: 'Location', request_location: true}],
        [{text: 'Contact', request_contact: true}],
        [{ text: "‚ö°Ô∏è Reddit", callback_data: "dfsghhgfd" }],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    }),
  };
  bot.telegram.sendMessage(ctx.chat.id, 'aaa <a href="https://electrotallinn.ee/map/">–∫–∞—Ä—Ç—É</a>', {
    disable_web_page_preview: true,
    parse_mode: "HTML",
    reply_markup: {
      force_reply: true
    }
  }).then(payload => {
    const replyListenerId = bot.onReplyToMessage(payload.chat.id, payload.message_id, msg => {
        bot.removeReplyListener(replyListenerId)
        console.log(msg) // here's the reply which is I think what you want
    })
  })

  console.log(ctx);
  console.log(ctx.update);

  bot.telegram.sendMessage(ctx.chat.id, 'Contact and Location request', opts);

});

// Hears
bot.hears(["–ü—Ä–∏–≤–µ—Ç", "–ø—Ä–∏–≤–µ—Ç", "—Ö–∞–π", "–•–∞–π", "Yo", "–ó–¥–∞—Ä–æ–≤–∞", "–∑–¥–∞—Ä–æ–≤–∞", "–ø—Ä–∏–≤", "–ü—Ä–∏–≤", "–ó–¥—Ä–∞—Å—Ç–µ", "–∑–¥—Ä–∞—Å—Ç–µ"], (ctx) => ctx.reply("–ü—Ä–∏–≤–µ—Ç!", {disable_notification: true}));
bot.hears(["mod", "repair", "service", "problem", "tuning"], (ctx) => ctx.reply("@electrotallinn_service - ElectroTallinn Service Group \nTech help, Mods, Tuning, Repair, Service", {disable_notification: true}));
bot.hears(["–ø—Ä–æ–±–ª–µ–º–∞", "–ø–æ—á–∏–Ω–∏—Ç—å", "–∑–∞–º–µ–Ω–∞", "—Ç—é–Ω–∏–Ω–≥", "—Å–µ—Ä–≤–∏—Å", "—Ç–µ—Ö", "–∞–∫—É–º", "—Å–µ—Ä–≤–∏—Å"], (ctx) => ctx.reply("@electrotallinn_service - ElectroTallinn –ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è \n–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º, –°–µ—Ä–≤–∏—Å, –¢—é–Ω–∏–Ω–≥, –ó–∞–ø—á–∞—Å—Ç–∏", {disable_notification: true}));
bot.hears("hi", (ctx) => ctx.reply("*Hey* there", {disable_web_page_preview: true,parse_mode: "Markdown",disable_notification: true}));
bot.hears("map", (ctx) => ctx.replyWithHTML("<a href='https://www.google.com/maps/d/u/0/edit?mid=1SIuEYU3bxlq76mncjtR5yspMl8Q0s45L&z=9'>Map</a>", {disable_web_page_preview: true,disable_notification: true}));
// Filters
let arr = ['6–ª—è','6–ª—è–¥—å','6–ª—è—Ç—å','b3—äe–±','cock','cunt','e6a–ª—å','ebal','eblan','e–±a–ª','e–±a—Ç—å','e–±y—á','e–±–∞—Ç—å','e–±—ë—Ç','e–±–ª–∞–Ω—Ç–∏–π','fuck','fucker','fucking','xy—ë–≤','xy–π','xy—è','x—É–µ','x—É–π','x—É—é','zaeb','zaebal','zaebali','zaebat','–∞—Ä—Ö–∏–ø–∏–∑–¥—Ä–∏—Ç','–∞—Ö—É–µ–ª','–∞—Ö—É–µ—Ç—å','–±–∑–¥–µ–Ω–∏–µ','–±–∑–¥–µ—Ç—å','–±–∑–¥–µ—Ö','–±–∑–¥–µ—Ü—ã','–±–∑–¥–∏—Ç','–±–∑–¥–∏—Ü—ã','–±–∑–¥–ª–æ','–±–∑–¥–Ω—É—Ç—å','–±–∑–¥—É–Ω','–±–∑–¥—É–Ω—å—è','–±–∑–¥—é—Ö–∞','–±–∑–¥—é—à–∫–∞','–±–∑–¥—é—à–∫–æ','–±–ª—è','–±–ª—è–±—É','–±–ª—è–±—É–¥—É','–±–ª—è–¥','–±–ª—è–¥–∏','–±–ª—è–¥–∏–Ω–∞','–±–ª—è–¥–∏—â–µ','–±–ª—è–¥–∫–∏','–±–ª—è–¥–æ–≤–∞—Ç—å','–±–ª—è–¥—Å—Ç–≤–æ','–±–ª—è–¥—É–Ω','–±–ª—è–¥—É–Ω—ã','–±–ª—è–¥—É–Ω—å—è','–±–ª—è–¥—å','–±–ª—è–¥—é–≥–∞','–±–ª—è—Ç—å','–≤–∞—Ñ–µ–ª','–≤–∞—Ñ–ª—ë—Ä','–≤–∑—ä–µ–±–∫–∞','–≤–∑—å–µ–±–∫–∞','–≤–∑—å–µ–±—ã–≤–∞—Ç—å','–≤—ä–µ–±','–≤—ä–µ–±–∞–ª—Å—è','–≤—ä–µ–±–µ–Ω–Ω','–≤—ä–µ–±—É—Å—å','–≤—ä–µ–±—ã–≤–∞—Ç—å','–≤—ã–±–ª—è–¥–æ–∫','–≤—ã–±–ª—è–¥—ã—à','–≤—ã–µ–±','–≤—ã–µ–±–∞—Ç—å','–≤—ã–µ–±–µ–Ω','–≤—ã–µ–±–Ω—É–ª—Å—è','–≤—ã–µ–±–æ–Ω','–≤—ã–µ–±—ã–≤–∞—Ç—å—Å—è','–≤—ã–ø–µ—Ä–¥–µ—Ç—å','–≤—ã—Å—Ä–∞—Ç—å—Å—è','–≤—ã—Å—Å–∞—Ç—å—Å—è','–≤—å–µ–±–µ–Ω','–≥–∞–≤–Ω–æ','–≥–∞–≤–Ω—é–∫','–≥–∞–≤–Ω—é—á–∫–∞','–≥–∞–º–Ω–æ','–≥–∞–Ω–¥–æ–Ω','–≥–Ω–∏–¥','–≥–Ω–∏–¥–∞','–≥–Ω–∏–¥—ã','–≥–æ–≤–µ–Ω–∫–∞','–≥–æ–≤–µ–Ω–Ω—ã–π','–≥–æ–≤–µ—à–∫–∞','–≥–æ–≤–Ω–∞–∑–∏—è','–≥–æ–≤–Ω–µ—Ü–æ','–≥–æ–≤–Ω–∏—â–µ','–≥–æ–≤–Ω–æ','–≥–æ–≤–Ω–æ–µ–¥','–≥–æ–≤–Ω–æ–ª–∏–Ω–∫','–≥–æ–≤–Ω–æ—á–∏—Å—Ç','–≥–æ–≤–Ω—é–∫','–≥–æ–≤–Ω—é—Ö–∞','–≥–æ–≤–Ω—è–¥–∏–Ω–∞','–≥–æ–≤–Ω—è–∫','–≥–æ–≤–Ω—è–Ω—ã–π','–≥–æ–≤–Ω—è—Ç—å','–≥–æ–Ω–¥–æ–Ω','–¥–æ–µ–±—ã–≤–∞—Ç—å—Å—è','–¥–æ–ª–±–æ–µ–±','–¥–æ–ª–±–æ—ë–±','–¥–æ–ª–±–æ—è—â–µ—Ä','–¥—Ä–∏—Å–Ω—è','–¥—Ä–∏—Å—Ç','–¥—Ä–∏—Å—Ç–∞–Ω—É—Ç—å','–¥—Ä–∏—Å—Ç–∞—Ç—å','–¥—Ä–∏—Å—Ç—É–Ω','–¥—Ä–∏—Å—Ç—É—Ö–∞','–¥—Ä–æ—á–µ–ª–ª–æ','–¥—Ä–æ—á–µ–Ω–∞','–¥—Ä–æ—á–∏–ª–∞','–¥—Ä–æ—á–∏–ª–∫–∞','–¥—Ä–æ—á–∏—Å—Ç—ã–π','–¥—Ä–æ—á–∏—Ç—å','–¥—Ä–æ—á–∫–∞','–¥—Ä–æ—á—É–Ω','–µ6–∞–ª','–µ6—É—Ç','–µ–±—Ç–≤–æ—é–º–∞—Ç—å','—ë–±—Ç–≤–æ—é–º–∞—Ç—å','—ë–±a–Ω','–µ–±a—Ç—å','–µ–±y—á','–µ–±–∞–ª','–µ–±–∞–ª–æ','–µ–±–∞–ª—å–Ω–∏–∫','–µ–±–∞–Ω','–µ–±–∞–Ω–∞–º–∞—Ç—å','–µ–±–∞–Ω–∞—Ç','–µ–±–∞–Ω–∞—è','—ë–±–∞–Ω–∞—è','–µ–±–∞–Ω–∏—á–µ—Å–∫–∏–π','–µ–±–∞–Ω–Ω—ã–π','–µ–±–∞–Ω–Ω—ã–π–≤—Ä–æ—Ç','–µ–±–∞–Ω–æ–µ','–µ–±–∞–Ω—É—Ç—å','–µ–±–∞–Ω—É—Ç—å—Å—è','—ë–±–∞–Ω—É—é','–µ–±–∞–Ω—ã–π','–µ–±–∞–Ω—å–∫–æ','–µ–±–∞—Ä—å','–µ–±–∞—Ç','—ë–±–∞—Ç','–µ–±–∞—Ç–æ—Ä–∏—è','–µ–±–∞—Ç—å','–µ–±–∞—Ç—å-–∫–æ–ø–∞—Ç—å','–µ–±–∞—Ç—å—Å—è','–µ–±–∞—à–∏—Ç—å','–µ–±—ë–Ω–∞','–µ–±–µ—Ç','–µ–±—ë—Ç','–µ–±–µ—Ü','–µ–±–∏–∫','–µ–±–∏–Ω','–µ–±–∏—Å—å','–µ–±–∏—á–µ—Å–∫–∞—è','–µ–±–∫–∏','–µ–±–ª–∞','–µ–±–ª–∞–Ω','–µ–±–ª–∏–≤—ã–π','–µ–±–ª–∏—â–µ','–µ–±–ª–æ','–µ–±–ª—ã—Å—Ç','–µ–±–ª—è','—ë–±–Ω','–µ–±–Ω—É—Ç—å','–µ–±–Ω—É—Ç—å—Å—è','–µ–±–Ω—è','–µ–±–æ—à–∏—Ç—å','–µ–±—Å–∫–∞—è','–µ–±—Å–∫–∏–π','–µ–±—Ç–≤–æ—é–º–∞—Ç—å','–µ–±—É–Ω','–µ–±—É—Ç','–µ–±—É—á','–µ–±—É—á–µ','–µ–±—É—á–µ–µ','–µ–±—É—á–∏–π','–µ–±—É—á–∏–º','–µ–±—É—â','–µ–±—ã—Ä—å','–µ–ª–¥–∞','–µ–ª–¥–∞–∫','–µ–ª–¥–∞—á–∏—Ç—å','–∂–æ–ø–∞','–∂–æ–ø—É','–∑–∞–≥–æ–≤–Ω—è—Ç—å','–∑–∞–¥—Ä–∞—á–∏–≤–∞—Ç—å','–∑–∞–¥—Ä–∏—Å—Ç–∞—Ç—å','–∑–∞–¥—Ä–æ—Ç–∞','–∑–∞–µ6','–∑–∞—ë6','–∑–∞–µ–±','–∑–∞—ë–±','–∑–∞–µ–±–∞','–∑–∞–µ–±–∞–ª','–∑–∞–µ–±–∞–Ω–µ—Ü','–∑–∞–µ–±–∞—Å—Ç–∞—è','–∑–∞–µ–±–∞—Å—Ç—ã–π','–∑–∞–µ–±–∞—Ç—å','–∑–∞–µ–±–∞—Ç—å—Å—è','–∑–∞–µ–±–∞—à–∏—Ç—å','–∑–∞–µ–±–∏—Å—Ç–æ–µ','–∑–∞—ë–±–∏—Å—Ç–æ–µ','–∑–∞–µ–±–∏—Å—Ç—ã–µ','–∑–∞—ë–±–∏—Å—Ç—ã–µ','–∑–∞–µ–±–∏—Å—Ç—ã–π','–∑–∞—ë–±–∏—Å—Ç—ã–π','–∑–∞–µ–±–∏—Å—å','–∑–∞–µ–±–æ—à–∏—Ç—å','–∑–∞–µ–±—ã–≤–∞—Ç—å—Å—è','–∑–∞–ª—É–ø','–∑–∞–ª—É–ø–∞','–∑–∞–ª—É–ø–∞—Ç—å—Å—è','–∑–∞–ª—É–ø–∏—Ç—å','–∑–∞–ª—É–ø–∏—Ç—å—Å—è','–∑–∞–º—É–¥–æ—Ö–∞—Ç—å—Å—è','–∑–∞–ø–∏–∑–¥—è—á–∏—Ç—å','–∑–∞—Å–µ—Ä–∞—Ç—å','–∑–∞—Å–µ—Ä—É–Ω','–∑–∞—Å–µ—Ä—è','–∑–∞—Å–∏—Ä–∞—Ç—å','–∑–∞—Å—Ä—É–Ω','–∑–∞—Ö—É—è—á–∏—Ç—å','–∑–∞—è–±–µ—Å—Ç–∞—è','–∑–ª–æ–µ–±','–∑–ª–æ–µ–±—É—á–∞—è','–∑–ª–æ–µ–±—É—á–µ–µ','–∑–ª–æ–µ–±—É—á–∏–π','–∏–±–∞–Ω–∞–º–∞—Ç','–∏–±–æ–Ω–µ—Ö','–∏–∑–≥–æ–≤–Ω—è—Ç—å','–∏–∑–≥–æ–≤–Ω—è—Ç—å—Å—è','–∏–∑—ä–µ–±–Ω—É—Ç—å—Å—è','–∏–ø–∞—Ç—å','–∏–ø–∞—Ç—å—Å—è','–∏–ø–∞—Ü—Ü–æ','–ö–∞–∫–¥–≤–∞–ø–∞–ª—å—Ü–∞–æ–±–æ—Å—Å–∞—Ç—å','–∫–æ–Ω—á–∞','–∫—É—Ä–≤–∞','–∫—É—Ä–≤—è—Ç–Ω–∏–∫','–ª–æ—Ö','–ª–æ—à–∞—Äa','–ª–æ—à–∞—Ä–∞','–ª–æ—à–∞—Ä—ã','–ª–æ—à–æ–∫','–ª—è—Ä–≤–∞','–º–∞–ª–∞—Ñ—å—è','–º–∞–Ω–¥–∞','–º–∞–Ω–¥–∞–≤–æ—à–µ–∫','–º–∞–Ω–¥–∞–≤–æ—à–∫–∞','–º–∞–Ω–¥–∞–≤–æ—à–∫–∏','–º–∞–Ω–¥–µ–π','–º–∞–Ω–¥–µ–Ω—å','–º–∞–Ω–¥–µ—Ç—å','–º–∞–Ω–¥–∏—â–∞','–º–∞–Ω–¥–æ–π','–º–∞–Ω–¥—É','–º–∞–Ω–¥—é–∫','–º–∏–Ω–µ—Ç','–º–∏–Ω–µ—Ç—á–∏–∫','–º–∏–Ω–µ—Ç—á–∏—Ü–∞','–º–ª—è—Ç—å','–º–æ–∫—Ä–æ—â–µ–ª–∫–∞','–º–æ–∫—Ä–æ—â—ë–ª–∫–∞','–º—Ä–∞–∑—å','–º—É–¥ak','–º—É–¥a–∫','–º—É–¥–∞–≥','–º—É–¥–∞–∫','–º—É–¥–µ','–º—É–¥–µ–ª—å','–º—É–¥–µ—Ç—å','–º—É–¥–∏','–º—É–¥–∏–ª','–º—É–¥–∏–ª–∞','–º—É–¥–∏—Å—Ç—ã–π','–º—É–¥–Ω—è','–º—É–¥–æ–µ–±','–º—É–¥–æ–∑–≤–æ–Ω','–º—É–¥–æ–∫–ª—é–π','–Ω–∞—Ö–µ—Ä','–Ω–∞—Ö—É–π','–Ω–∞–±–∑–¥–µ–ª','–Ω–∞–±–∑–¥–µ—Ç—å','–Ω–∞–≥–æ–≤–Ω—è—Ç—å','–Ω–∞–¥—Ä–∏—Å—Ç–∞—Ç—å','–Ω–∞–¥—Ä–æ—á–∏—Ç—å','–Ω–∞–µ–±–∞—Ç—å','–Ω–∞–µ–±–µ—Ç','–Ω–∞–µ–±–Ω—É—Ç—å','–Ω–∞–µ–±–Ω—É—Ç—å—Å—è','–Ω–∞–µ–±—ã–≤–∞—Ç—å','–Ω–∞–ø–∏–∑–¥–µ–ª','–Ω–∞–ø–∏–∑–¥–µ–ª–∏','–Ω–∞–ø–∏–∑–¥–µ–ª–æ','–Ω–∞–ø–∏–∑–¥–∏–ª–∏','–Ω–∞—Å—Ä–∞—Ç—å','–Ω–∞—Å—Ç–æ–ø–∏–∑–¥–∏—Ç—å','–Ω–∞—Ö–µ—Ä','–Ω–∞—Ö—Ä–µ–Ω','–Ω–∞—Ö—É–π','–Ω–∞—Ö—É–π–Ω–∏–∫','–Ω–µ–µ–±–µ—Ç','–Ω–µ–µ–±—ë—Ç','–Ω–µ–≤—Ä–æ—Ç–µ–±—É—á–∏–π','–Ω–µ–≤—ä–µ–±–µ–Ω–Ω–æ','–Ω–µ—Ö–∏—Ä–∞','–Ω–µ—Ö—Ä–µ–Ω','–ù–µ—Ö—É–π','–Ω–µ—Ö—É–π—Å—Ç–≤–µ–Ω–Ω–æ','–Ω–∏–∏–±–∞—Ü–æ','–Ω–∏–∏–ø–∞—Ü—Ü–∞','–Ω–∏–∏–ø–∞—Ü—Ü–æ','–Ω–∏–∏–ø–µ—Ç','–Ω–∏–∫—É—è','–Ω–∏—Ö–µ—Ä–∞','–Ω–∏—Ö—É—è','–æ–±–¥—Ä–∏—Å—Ç–∞—Ç—å—Å—è','–æ–±–æ—Å—Ä–∞–Ω–µ—Ü','–æ–±–æ—Å—Ä–∞—Ç—å','–æ–±–æ—Å—Ü–∞—Ç—å','–æ–±–æ—Å—Ü–∞—Ç—å—Å—è','–æ–±—Å–∏—Ä–∞—Ç—å','–æ–±—ä–µ–±–æ—Å','–æ–±—å–µ–±–∞—Ç—å–æ–±—å–µ–±–æ—Å','–æ–¥–Ω–æ—Ö—É–π—Å—Ç–≤–µ–Ω–Ω–æ','–æ–ø–µ–∑–¥–∞–ª','–æ–ø–∏–∑–¥–µ','–æ–ø–∏–∑–¥–µ–Ω–∏–≤–∞—é—â–µ','–æ—Å—Ç–æ–µ–±–µ–Ω–∏—Ç—å','–æ—Å—Ç–æ–ø–∏–∑–¥–µ—Ç—å','–æ—Ç–º—É–¥–æ—Ö–∞—Ç—å','–æ—Ç–ø–∏–∑–¥–∏—Ç—å','–æ—Ç–ø–∏–∑–¥—è—á–∏—Ç—å','–æ—Ç–ø–æ—Ä–æ—Ç—å','–æ—Ç—ä–µ–±–∏—Å—å','–æ—Ö—É–µ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π','–æ—Ö—É–µ–≤–∞—Ç—å','–æ—Ö—É–µ–≤–∞—é—â–∏–π','–æ—Ö—É–µ–ª','–æ—Ö—É–µ–Ω–Ω–æ','–æ—Ö—É–µ–Ω—å—á–∏–∫','–æ—Ö—É–µ—Ç—å','–æ—Ö—É–∏—Ç–µ–ª—å–Ω–æ','–æ—Ö—É–∏—Ç–µ–ª—å–Ω—ã–π','–æ—Ö—É—è–Ω—å—á–∏–∫','–æ—Ö—É—è—á–∏–≤–∞—Ç—å','–æ—Ö—É—è—á–∏—Ç—å','–æ—á–∫—É–Ω','–ø–∞–¥–ª–∞','–ø–∞–¥–æ–Ω–∫–∏','–ø–∞–¥–æ–Ω–æ–∫','–ø–∞—Å–∫—É–¥–∞','–ø–µ–¥–µ—Ä–∞—Å','–ø–µ–¥–∏–∫','–ø–µ–¥—Ä–∏–∫','–ø–µ–¥—Ä–∏–ª–∞','–ø–µ–¥—Ä–∏–ª–ª–æ','–ø–µ–¥—Ä–∏–ª–æ','–ø–µ–¥—Ä–∏–ª—ã','–ø–µ–∑–¥–µ–Ω—å','–ø–µ–∑–¥–∏—Ç','–ø–µ–∑–¥–∏—à—å','–ø–µ–∑–¥–æ','–ø–µ–∑–¥—è—Ç','–ø–µ—Ä–¥–∞–Ω—É—Ç—å','–ø–µ—Ä–¥–µ–∂','–ø–µ—Ä–¥–µ–Ω–∏–µ','–ø–µ—Ä–¥–µ—Ç—å','–ø–µ—Ä–¥–∏–ª—å–Ω–∏–∫','–ø–µ—Ä–¥–Ω—É—Ç—å','–ø—ë—Ä–¥–Ω—É—Ç—å','–ø–µ—Ä–¥—É–Ω','–ø–µ—Ä–¥—É–Ω–µ—Ü','–ø–µ—Ä–¥—É–Ω–∏–Ω–∞','–ø–µ—Ä–¥—É–Ω—å—è','–ø–µ—Ä–¥—É—Ö–∞','–ø–µ—Ä–¥—å','–ø–µ—Ä–µ—ë–±–æ–∫','–ø–µ—Ä–Ω—É—Ç—å','–ø—ë—Ä–Ω—É—Ç—å','–ø–∏3–¥','–ø–∏3–¥–µ','–ø–∏3–¥—É','–ø–∏z–¥–µ—Ü','–ø–∏–¥–∞—Ä','–ø–∏–¥–∞—Äa—Å','–ø–∏–¥–∞—Ä–∞—Å','–ø–∏–¥–∞—Ä–∞—Å—ã','–ø–∏–¥–∞—Ä—ã','–ø–∏–¥–æ—Ä','–ø–∏–¥–æ—Ä–∞—Å—ã','–ø–∏–¥–æ—Ä–∫–∞','–ø–∏–¥–æ—Ä–æ–∫','–ø–∏–¥–æ—Ä—ã','–ø–∏–¥—Ä–∞—Å','–ø–∏–∑–¥–∞','–ø–∏–∑–¥–∞–Ω—É—Ç—å','–ø–∏–∑–¥–∞–Ω—É—Ç—å—Å—è','–ø–∏–∑–¥–∞—Ä–≤–∞–Ω—å—á–∏–∫','–ø–∏–∑–¥–∞—Ç–æ','–ø–∏–∑–¥–∞—Ç–æ–µ','–ø–∏–∑–¥–∞—Ç—ã–π','–ø–∏–∑–¥–µ–Ω–∫–∞','–ø–∏–∑–¥–µ–Ω—ã—à','–ø–∏–∑–¥—ë–Ω—ã—à','–ø–∏–∑–¥–µ—Ç—å','–ø–∏–∑–¥–µ—Ü','–ø–∏–∑–¥–∏—Ç','–ø–∏–∑–¥–∏—Ç—å','–ø–∏–∑–¥–∏—Ç—å—Å—è','–ø–∏–∑–¥–∏—à—å','–ø–∏–∑–¥–∏—â–∞','–ø–∏–∑–¥–∏—â–µ','–ø–∏–∑–¥–æ–±–æ–ª','–ø–∏–∑–¥–æ–±–æ–ª—ã','–ø–∏–∑–¥–æ–±—Ä–∞—Ç–∏—è','–ø–∏–∑–¥–æ–≤–∞—Ç–∞—è','–ø–∏–∑–¥–æ–≤–∞—Ç—ã–π','–ø–∏–∑–¥–æ–ª–∏–∑','–ø–∏–∑–¥–æ–Ω—É—Ç—ã–µ','–ø–∏–∑–¥–æ—Ä–≤–∞–Ω–µ—Ü','–ø–∏–∑–¥–æ—Ä–≤–∞–Ω–∫–∞','–ø–∏–∑–¥–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å','–ø–∏–∑–¥—É','–ø–∏–∑–¥—É–π','–ø–∏–∑–¥—É–Ω','–ø–∏–∑–¥—É–Ω—å—è','–ø–∏–∑–¥—ã','–ø–∏–∑–¥—é–≥–∞','–ø–∏–∑–¥—é–∫','–ø–∏–∑–¥—é–ª–∏–Ω–∞','–ø–∏–∑–¥—é–ª—è','–ø–∏–∑–¥—è—Ç','–ø–∏–∑–¥—è—á–∏—Ç—å','–ø–∏—Å–±—à–∫–∏','–ø–∏—Å—å–∫–∞','–ø–∏—Å—å–∫–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å','–ø–∏—Å—é–Ω','–ø–∏—Å—é—à–∫–∞','–ø–æ—Ö—É–π','–ø–æ—Ö—É—é','–ø–æ–¥–≥–æ–≤–Ω—è—Ç—å','–ø–æ–¥–æ–Ω–∫–∏','–ø–æ–¥–æ–Ω–æ–∫','–ø–æ–¥—ä–µ–±–Ω—É—Ç—å','–ø–æ–¥—ä–µ–±–Ω—É—Ç—å—Å—è','–ø–æ–µ–±–∞—Ç—å','–ø–æ–µ–±–µ–Ω—å','–ø–æ—ë–±—ã–≤–∞–∞–µ—Ç','–ø–æ—Å–∫—É–¥–∞','–ø–æ—Å—Ä–∞—Ç—å','–ø–æ—Ç–∞—Å–∫—É—Ö–∞','–ø–æ—Ç–∞—Å–∫—É—à–∫–∞','–ø–æ—Ö–µ—Ä','–ø–æ—Ö–µ—Ä–∏–ª','–ø–æ—Ö–µ—Ä–∏–ª–∞','–ø–æ—Ö–µ—Ä–∏–ª–∏','–ø–æ—Ö–µ—Ä—É','–ø–æ—Ö—Ä–µ–Ω','–ø–æ—Ö—Ä–µ–Ω—É','–ø–æ—Ö—É–π','–ø–æ—Ö—É–∏—Å—Ç','–ø–æ—Ö—É–∏—Å—Ç–∫–∞','–ø–æ—Ö—É—é','–ø—Ä–∏–¥—É—Ä–æ–∫','–ø—Ä–∏–µ–±–∞—Ç—å—Å—è','–ø—Ä–∏–ø–∏–∑–¥–µ–Ω—å','–ø—Ä–∏–ø–∏–∑–¥–Ω—É—Ç—ã–π','–ø—Ä–∏–ø–∏–∑–¥—é–ª–∏–Ω–∞','–ø—Ä–æ–±–∑–¥–µ–ª—Å—è','–ø—Ä–æ–±–ª—è–¥—å','–ø—Ä–æ–µ–±','–ø—Ä–æ–µ–±–∞–Ω–∫–∞','–ø—Ä–æ–µ–±–∞—Ç—å','–ø—Ä–æ–º–∞–Ω–¥–µ—Ç—å','–ø—Ä–æ–º—É–¥–µ—Ç—å','–ø—Ä–æ–ø–∏–∑–¥–µ–ª—Å—è','–ø—Ä–æ–ø–∏–∑–¥–µ—Ç—å','–ø—Ä–æ–ø–∏–∑–¥—è—á–∏—Ç—å','—Ä–∞–∑–¥–æ–ª–±–∞–π','—Ä–∞–∑—Ö—É—è—á–∏—Ç—å','—Ä–∞–∑—ä–µ–±','—Ä–∞–∑—ä–µ–±–∞','—Ä–∞–∑—ä–µ–±–∞–π','—Ä–∞–∑—ä–µ–±–∞—Ç—å','—Ä–∞—Å–ø–∏–∑–¥–∞–π','—Ä–∞—Å–ø–∏–∑–¥–µ—Ç—å—Å—è','—Ä–∞—Å–ø–∏–∑–¥—è–π','—Ä–∞—Å–ø–∏–∑–¥—è–π—Å—Ç–≤–æ','—Ä–∞—Å–ø—Ä–æ–µ—Ç—å','—Å–≤–æ–ª–æ—Ç–∞','—Å–≤–æ–ª–æ—á—å','—Å–≥–æ–≤–Ω—è—Ç—å','—Å–µ–∫–µ–ª—å','—Å–µ—Ä—É–Ω','—Å–µ—Ä—å–∫–∞','—Å–µ—Å—Ç—Ä–æ–µ–±','—Å–∏–∫–µ–ª—å','—Å–∏–ª–∞','—Å–∏—Ä–∞—Ç—å','—Å–∏—Ä—ã–≤–∞—Ç—å','—Å–æ—Å–∏','—Å–ø–∏–∑–¥–µ–ª','—Å–ø–∏–∑–¥–µ—Ç—å','—Å–ø–∏–∑–¥–∏–ª','—Å–ø–∏–∑–¥–∏–ª–∞','—Å–ø–∏–∑–¥–∏–ª–∏','—Å–ø–∏–∑–¥–∏—Ç','—Å–ø–∏–∑–¥–∏—Ç—å','—Å—Ä–∞–∫–∞','—Å—Ä–∞–∫—É','—Å—Ä–∞–Ω—ã–π','—Å—Ä–∞–Ω—å–µ','—Å—Ä–∞—Ç—å','—Å—Ä—É–Ω','—Å—Å–∞–∫–∞','—Å—Å—ã—à—å','—Å—Ç–µ—Ä–≤–∞','—Å—Ç—Ä–∞—Ö–æ–ø–∏–∑–¥–∏—â–µ','—Å—É–∫–∞','—Å—É–∫–∏','—Å—É—Ö–æ–¥—Ä–æ—á–∫–∞','—Å—É—á–∞—Ä–∞','—Å—É—á–∏–π','—Å—É—á–∫–∞','—Å—É—á–∫–æ','—Å—É—á–æ–Ω–æ–∫','—Å—É—á—å–µ','—Å—Ü–∞–Ω–∏–µ','—Å—Ü–∞—Ç—å','—Å—Ü—É–∫–∞','—Å—Ü—É–∫–∏','—Å—Ü—É–∫–æ–Ω–∞—Ö','—Å—Ü—É–ª—å','—Å—Ü—ã—Ö–∞','—Å—Ü—ã—à—å','—Å—ä–µ–±–∞—Ç—å—Å—è','—Å—ã–∫—É–Ω','—Ç—Ä–∞—Ö–∞–µ6','—Ç—Ä–∞—Ö–∞–µ–±','—Ç—Ä–∞—Ö–∞—ë–±','—Ç—Ä–∞—Ö–∞—Ç–µ–ª—å','—É–±–ª—é–¥–æ–∫','—É–µ–±–∞—Ç—å','—É—ë–±–∏—â–∞','—É–µ–±–∏—â–µ','—É—ë–±–∏—â–µ','—É–µ–±–∏—â–Ω–æ–µ','—É—ë–±–∏—â–Ω–æ–µ','—É–µ–±–∫','—É–µ–±–∫–∏','—É—ë–±–∫–∏','—É–µ–±–æ–∫','—É—ë–±–æ–∫','—É—Ä—é–∫','—É—Å—Ä–∞—Ç—å—Å—è','—É—à–ª–µ–ø–æ–∫','—Ö_—É_—è_—Ä_–∞','—Öy—ë','—Öy–π','—Öy–π–Ω—è','—Ö–∞–º–ª–æ','—Ö–µ—Ä','—Ö–µ—Ä–Ω—è','—Ö–µ—Ä–æ–≤–∞—Ç–æ','—Ö–µ—Ä–æ–≤–∏–Ω–∞','—Ö–µ—Ä–æ–≤—ã–π','—Ö–∏—Ç—Ä–æ–≤—ã–µ–±–∞–Ω–Ω—ã–π','—Ö–∏—Ç—Ä–æ–∂–æ–ø—ã–π','—Ö—Ée–º','—Ö—É–µ','—Ö—É—ë','—Ö—É–µ–≤–∞—Ç–æ','—Ö—É—ë–≤–µ–Ω—å–∫–∏–π','—Ö—É–µ–≤–∏–Ω–∞','—Ö—É–µ–≤–æ','—Ö—É–µ–≤—ã–π','—Ö—É—ë–≤—ã–π','—Ö—É–µ–∫','—Ö—É—ë–∫','—Ö—É–µ–ª','—Ö—É–µ–º','—Ö—É–µ–Ω—á','—Ö—É–µ–Ω—ã—à','—Ö—É–µ–Ω—å–∫–∏–π','—Ö—É–µ–ø–ª–µ—Ç','—Ö—É–µ–ø–ª—ë—Ç','—Ö—É–µ–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫','—Ö—É–µ—Ä–∏–∫','—Ö—É–µ—Ä—ã–ª–æ','—Ö—É–µ—Å–æ—Å','—Ö—É–µ—Å–æ—Å–∫–∞','—Ö—É–µ—Ç–∞','—Ö—É–µ—Ç–µ–Ω—å','—Ö—É–µ—é','—Ö—É–∏','—Ö—É–π','—Ö—É–π–∫–æ–º','—Ö—É–π–ª–æ','—Ö—É–π–Ω—è','—Ö—É–π—Ä–∏–∫','—Ö—É–∏—â–µ','—Ö—É–ª—è','—Ö—É—é','—Ö—É—é–ª','—Ö—É—è','—Ö—É—è–∫','—Ö—É—è–∫–∞—Ç—å','—Ö—É—è–∫–Ω—É—Ç—å','—Ö—É—è—Ä–∞','—Ö—É—è—Å–µ','—Ö—É—è—á–∏—Ç—å','—Ü–µ–ª–∫–∞','—á–º–æ','—á–º–æ—à–Ω–∏–∫','—á–º—ã—Ä—å','—à–∞–ª–∞–≤–∞','—à–∞–ª–∞–≤–æ–π','—à–∞—Ä–∞—ë–±–∏—Ç—å—Å—è','—à–ª—é—Ö–∞','—à–ª—é—Ö–æ–π','—à–ª—é—à–∫–∞','—è–±—ã–≤–∞–µ—Ç'];
bot.hears(arr, ctx => {
  ctx.replyWithMarkdown( `*${ctx.message.from.first_name}*, –Ω–µ —Ä—É–≥–∞–µ–º—Å—è :) - _—Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ_`);
  ctx.deleteMessage();
});

//${ctx.message.chat.first_name},
bot.launch();

